{"version":3,"sources":["cpu/utils.js"],"names":["log","console","bind","e","id","document","querySelector","apart_data","low","data","high","assert","ret","read_low_8bit","read_high_8bit","isArrayEqual","array1","array2","v","i","isDigit","str","test","fillZero","arr","size","concat","Array","fill","get_instructions","d","set","add","save","compare","jump","save_from_register","set2","load2","add2","save2","subtract2","load_from_register","load_from_register2","save_from_register2","jump_from_register","halt","get_reg_mapper","mapper","0","16","32","64","80","get_registers","pa","a1","a2","c1","f1"],"mappings":"aAAA,IAAMA,IAAMC,QAAQD,IAAIE,KAAKD,SACxBE,EAAI,SAACC,GAAD,OAAMC,SAASC,cAAcF,IADhCJ,OAAMC,QAAYC,OAAKD,KAA7BA,SACSM,WAAc,SAACD,GAQpB,OARJE,IAAA,IAAAC,EAMIC,KAAOD,GAAQ,EAAI,IALjBE,IAAM,CAAAH,IAAGP,MAOJW,KADPA,oBAAA,SAAAJ,EAAAE,GAQA,OAJJD,KAAAD,GAAAE,GAAA,GAIWD,MAFPI,cAAA,SAAAJ,GACAA,OAAcC,IAAPF,GAQPM,eAAiB,SAASL,GAJ1BI,OAAAA,GAAa,EAAG,KAQhBE,aAAe,SAASC,EAAOC,GAJnC,OAAIH,EAAAA,QAAiBG,EAAjBH,QAAAA,EAA0BL,MAAK,SAAAS,EAAAC,GAAA,OAAAD,IAAAD,EAAAE,MAQ/BC,QAAU,SAASC,GAHrB,MADEN,QAAeO,KAAAD,IAAnBE,SAAA,SAAAC,EAAAC,GAUI,OAAOD,EAAIE,OAAOC,MAAMF,GAAMG,KAAK,KAJnCC,iBAAA,WAyBI,OA3BRC,EAAA,CAWQC,IAAO,EANXR,KAAW,EACXS,IAAWN,EADfO,KAAA,EAUQC,QAAW,EANfL,aAAmB,EACfM,KAAA,EACAC,mBADA,EAGAC,KAHA,EAIAC,MAJA,EAKAC,KALA,GAMAC,MAAA,GACAC,UAPA,GAUAC,mBAVA,GAWAC,oBAXA,GAYAC,oBAZA,GAaAC,mBAbA,GAcAC,KAAA,KAGAhB,GAjBJiB,eAAA,WA8BI,OARJC,OAAA,CAGJC,EAAA,KAIQC,GAAY,KACZC,GAAY,KAJhBJ,GAAc,KACRK,GAAG,KACOC,GADP,MAGOL,QAGZM,cAAY,WASZ,OAfJxB,EAAA,CAQAyB,GAAOP,EATXQ,GAAA,GAgBQC,GAAM,GAJVH,GAAAA,GACII,GAAA,GACAC,GADA,IAGM7B","file":"../../cpu/utils.js","sourcesContent":["const log = console.log.bind(console)\nvar  e = (id)=>document.querySelector(id)\nconst assert = console.assert.bind(console)\n\n// 将一个data分成高8位和低8位\nvar apart_data = function(data){\n    low = data & 0xff\n    high = data >> 8 & 0xff\n    ret = [low, high]\n    return ret\n}\n\n// 将高8位和低8位合成为一个整数\nvar restore_from_little = function(low, high){\n    // log('low, high:', low, high)\n    data = low + (high << 8)\n    return data\n}\n\nvar read_low_8bit = function(data){\n    return data & 0xff\n}\n\nvar read_high_8bit = function(data){\n    return data >> 8 & 0xff\n}\n\nvar isArrayEqual = function(array1,array2) {\n  return array1.length==array2.length && array1.every(function(v,i) { return v === array2[i]});\n}\n\nvar isDigit = function(str){\n    var ret = /^\\d+$/.test(str)\n    return ret\n}\n\nvar fillZero = function(arr, size){\n    return arr.concat(Array(size).fill(0))\n}\n\nvar get_instructions = function(){\n    d = {\n        'set': 0b00000000,\n        'load': 0b00000001,\n        'add': 0b00000010,\n        'save': 0b00000011,\n        'compare': 0b00000100,\n        'jump_if_less': 0b00000101,\n        'jump': 0b00000110,\n        'save_from_register': 0b00000111,\n\n        'set2': 0b00001000,\n        'load2': 0b00001001,\n        'add2': 0b00001010,\n        'save2': 0b00001011,\n        'subtract2': 0b00001100,\n\n        'load_from_register': 0b00001101,\n        'load_from_register2': 0b00001110,\n        'save_from_register2': 0b00001111,\n        'jump_from_register': 0b00010000,\n        'halt': 0b11111111,\n    }\n    return d\n}\n\n// 机器码到寄存器的映射\nvar get_reg_mapper = function(){\n    mapper = {\n        0b00000000: 'pa',\n        0b00010000: 'a1',\n        0b00100000: 'a2',\n        0b00110000: 'a3',\n        0b01000000: 'c1',\n        0b01010000: 'f1',\n    }\n    return mapper\n}\n\nvar get_registers = function(){\n    d = {\n        'pa': 0b00000000,\n        'a1': 0b00010000,\n        'a2': 0b00100000,\n        'a3': 0b00110000,\n        'c1': 0b01000000,\n        'f1': 0b01010000,\n    }\n    return d\n}\n"]}