3月1日 实现伪指令，开始自己造轮子：
1.先实现内存内容的查看，再弄清楚调用的步骤
2.根据需求来造伪指令






axe ide 实现思路:
	1.	汇编行数 和 机器码行数 的对应关系, 汇编的时候记录下来
	2.	断点的设置, 把设置了断点的行数记录下来, cpu执行到这一行的时候 停下来

	3.	代码编辑器通过 codemirror 来做, 断点 和 highlight 都可以通过它来做
	4.	其它的栈, 寄存器就是单纯的显示


实现过程记录：
1-在写asm的时候，遇到label翻译问题，@label是一个一个跳转的标记，
是内存地址，机器码是一个一个字节存在内存中的，label是地址
所有的jump地址都是16位的，所以每次插入mcode都需要有个占位，然后
label_map替换的时候都需要apart一下
label_map记录的是mcode.length
【asm话题】

行号对应的处理办法：
    在asm翻译汇编阶段就应该标记行号：
        1.有效代码占行，注释不占行
        2.几行机器码对应一行汇编代码
            !!!什么时候需要高亮显示？vm执行的时候，所以是机器码在运行时候需要高亮两边
            所以！！只要给每个机器码都对应上汇编代码的行号就可以了，machine_code得到的
            是机器码的数组，再同时对应一个汇编代码的行号即可

点击运行的思路：
    点击运行之后，才会执行机器码，也就是说，只有点击了运行按钮才生成一个cpu
    直到碰到breakpoints时停止，如果没有breakpoints，则一直执行完成

语法报错还没处理：
    应该在asm阶段处理
    xxx

断点调试功能：
    点击gutter得到断点，在运行的时候碰到断点则停止



CodeMirror部分：
1.需要两个编辑框
2.设置断点标记
3.运行时高亮
